package ru.javaprojects.leetcode_tasks.repeated_substring_pattern;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class SolutionTest {

    @Test
    void repeatedSubstringPatternWhenTrue() {
        Solution solution = new Solution();
        assertTrue(solution.repeatedSubstringPattern("abcabcdefabcabcdef"));
        assertTrue(solution.repeatedSubstringPattern("abacababacab"));
        assertTrue(solution.repeatedSubstringPattern("abaababaab"));
        assertTrue(solution.repeatedSubstringPattern("abab"));
        assertTrue(solution.repeatedSubstringPattern("abababab"));
        assertTrue(solution.repeatedSubstringPattern("aaaa"));
        assertTrue(solution.repeatedSubstringPattern("abcabcabcabc"));
        assertTrue(solution.repeatedSubstringPattern("zodwlwuxknpezmxxeksvyymlqyheptepjilxeiurxlvzasweerbcpnphnzmdssueahbhpvynivmiqioubqzqfqavpmaieumhbpqrkqgulsdbcryejzwrpwofioppkbylsoecekwrebvhvtleshxheloobdflgdxyrdcvobnsckbxdoexybgcnvsoaychbbfveksulhpnrqlwfptdsahfxbwxbyefbmafwsahcpwthjqmajrtlaykcwidwoixcifadfjfwgafrquscllpmlaoiktgacgdmlfpsrwozxvqppirbthphjfrtyxtadypogegxdwwasmpjxjmsqbzbgquhopjtqykwfqtippkjdbsakfvciudplzybphwfggblzwvqnfzqitttaoxjkbaxcyarfxynfzygxvwkaxdjtyetobeyeewheyamxzzdaajyvikyfnjalnubqaaxfyglwgxuhxzizkiussuaidavswxjxziezopvwnrgmsqndyjvsexahyyauxltwvxvlnshcmpqefdjdmhyqeaaeyczvnstksovfhehvuzzzclfqsdjwdjbelczawtmojhtslcnfdpffakysphqssrwfvyhsttgcacvngkvkzarbmpvbymvsfuxbsgvlzdpbfmroxmyyopachvfhjaapuzsognzhqrlwdekaqkzebbiiwnsgnsxktpybcajsrwquacxsmwyqzgaxtsfimcsgrthvtsqmqiislfkzdipcqqajkfuximdbhmxcfpoxxzqieckilbkdtmpesjbcxgdfucjbrazpzpzdrlnepyiikzoeirghxkmsoytgyuxxjycdmqhbqrjasyhapnkpzyjowewuzttitwnfmxgcqqejqllhbvwaufoqkkljfgtbchgqensufzdxmrenmdogiexurkfyqzzviglovgicfobrffhtivatbxnsjvrbwqweyisvocxvsyozgvtostjuszmdufeqybwwlqubsrwnskoyghoycyuwzjzvoelohjnszhttyrgsbvqjefkjfefgnhbenmsuvfowojppayhdvypbfzkmfsstztzmhtiebwapfrefpmkkmzmtyyfgqzzrsadztlfuhfmoyqtoegaqfolgnqmfpnxjnckiopdxwpmvhhlmplevcqbrinwyavjpyuxolankrbfzlsnafrvhjyyslxsnubcuxailcyvwzcvmuknzdkhnjhfwgxmbaovyqgjtggpfimucwhbztkoeutbasndtdztwhepnkguuuowsxztrmivgdyiwnmrtnmpwsgjemfyiwwatvvmjdkphiafymyrbkgxemiianikjekfbfrllbaumczkozdpllopzwzzkhlvnvaocuzpxcjjekvvjymujblixkjjtuhgrjvwdwlbyvmfhiargmnspbaplmahihpatkywjjzjgmoqwqhcfwuuxxlllmstvhvoutnffmonafdwvmbalxxiwivhupdqzygvutabgoqitufriirtfqeczzjvronqnuljnlmvbcgxylohthcaygcziouzckprgccvporqrzprmdafldhllkktygucqluynwucnntemkxyoyfbbmomwyiwgczzovxdrrgeebkqliobitcjgqxeqhbxkcyaxvdqplxtmhmarcbzwekewkknrnmdpmfohlfyweujlgjfikggqtmpfxewkqccehsluxmrbgcpmnwwzcdsxrhcolbbdddhmvuhvgaymcpyrlxqqainrpsictjfyomklhtgnvhcxwaqkxhazrpthjdlcmraadnnmiuaebedzeujedlfudadmdprpgrrlgfypbaveeyfkurqxcwshyxwcmntugngnugevgzbkzgwuxnrcllljjhlxufudsasmgwjoxkywsuqqjkuuxfeinpgjucmocgckclybxyyqsqieccychckwssiouwfydhihvgjuejmzbudeybgigseylmohjtgodovyxgubphcrbfxcjfkpxqpkfdsqzaecobcliwpxdrqhznjksvzslqeqtyisymwnoaawxrvcjmjkzuuuptodjsvetezrsxgiyjevacxjojtnfpjxizatuxandzewynewwlrwnribcdqhtcgdbgzvgbijapfaemxazqymjiplohvhjdmlmnisotbqijrmxoowgokqxzdlgauseifqynkmgldqwwetmsrsjbkgcotjqpduzimxxwkekpuinbeztvtczekbufmkwphwzvvxshbewxolysmuqgypmlqgsfspuznuxitpqwvotjcueoquuolibbquijlfkybhiuyaqvrlftflhvfemqmntdjcouhauiideifuewflrnwzkdfwttmoyvsmqbpklxpphvjntrynewmoztnsmzjnwbbmdqzopogxlpkhglumhibhdobrpmelogatwzjmppldhvmpigcqqdzttakknrxdxxytyjhozstiqfxynzqfepyzskjhbjmygkuftdvuwqcovcmkbdpguphmztvdchditxppbmjzconxqbjteybbnjppclseuvoovedwsoxvekuwleqscrtsckhevbkswzgrflpxzmsgwncktscxmxpohytfzfxyefplqhlrtdxssacnuglgfcvmbqtcvsaaxsnnzyhueeoygsmbyzhdbcseslhqgjsdbftceazkgningwqevxkxccbwpkmvuebxmuaswzccomrujhbehlblpfhgpwejafhmbjexkibyvvteeuinhmyyrggiekserbtskzruivsfsnjwjtkqfkqysxhwjbdbcwvoxpkhmcmesxcbrouyzkzrjiqtjtwnptboilwwpkahiflbtfbupaobieutxsiollcuyaqoltxvaiwtnzqfaegkicghuovfazbyauonpmipwgkmfathgbsqdyxzmugmuknugbhxprmmxyacbtkhueazexaquifouuiavrxnilbhkbllwxusburfutyodfcyzmyufyhpjiwtlhghhbzkxsqrnqhrvlpuzpqenavxkrqwbzdkafuzxmtncaezmttnimuwmpvyhnukmauohooedhtfhxfvsaldmfbauwzdjvpwvlkccyjfhckrcpouszzeeahbwgeibwezhqdjrmoyrzrvqgpkfrpmrypoetwhpcgzumilaxmtydoqjgbrxsfoquewpcdfgmgbaomanyulcienohelzjcrdgntlsarggsgwfhkfbxjlbxakdnjnrcsypnjkpaqxvxuagghjfruhqwttkdibfdbxqmhipzfkybmejtppmkycgryswgwejzbcmkkblrnktzqeugtjsrlajlvhsrldqmfeyrhkjwuevmisscbmvongaioubzxtofyowhyfeujbhuvbwwotndapnqjorihfnhumrurvpdyyxuzvspofuqwhihvaqfffmbrfwlanoblnvmipeyxyrtgzbdztihyxiscgdfvtgggdvquzorxflffojghrnhqybvggaczikhnfxheozetmjaashjmuseuwzbczdejnlwvlebzffurrvtleexawevsdyxfbbqqonnztpayuvrnskzyoyymcvhitenwffnvscvnrvlosebmqakgzltdgclcgayngniyqfojdzxvgbkwdudchygqatsiusvagfaylohoqhjwivulqxqzvypxrhfnaaniiqgtenhwwsueopsgokfmivjbeppgreozwuudkbziuwnklhqzrxnbsxezovfhcujyqdbchdldzankhflaczdxyhwodbxhxgfomhqvkbyldnvkuimwjpvjzrxevvlsdqirzzmlcmwgztstcfsnwnxvhuzcrkwxdfocgdqkpmsrilkmsezosykzvjdmublzgabofrzugrlqeycwcdlwcvvxgalcczbkbfzgyaagrowwoauqefnickhjnunptpbuuaaucdbutxshymxeummwxvhmpvbjmefihgcjlddedxlbkkhgxtcwqmifjlqvrwfyehirnnvqlitxuadtvhpntzscmlzejecnokgdadvlloihqnbnusaosusgfsmoyrdodjrdmmozcyhulijgajwueodlipchgfxkrpnfdeficocowmwyxuvdiyptptcyyzipoxxubcceqguossosmlvwlmpbfrzgrjxhgubkyfqomkegcvyqgwmukcvqtwymhvwpqxzodpfrblxfiyvruklemiwhguwnqscipeyuvdnxrlezlcsfmdlylihtedgwvlenrdjmizlbmqdxuvegzpemznggrocobjdsmphwouaakdxeybmzssmuguazkcnoltizipywkywwdvdbypdqirkqnkpxpelcxwchlcdxabwfwzgwqlnaczqpmfpbmcdjyhrmjwllyhqwiztbkibphsevztwlwcxwlqivmuimdzjmaenmoqbvigrkbpxztuyfkgaxckjgjuulajyozzmkhfwlutkqoivarxxthjbtfveggcwgeislnowkhjaxtxykuxgdihwofdwnhsvldnzsdxclgekabimvgsbqcxejacwkxsvchuuluxyabicfrpazjbpnbwwdavnxplbwhwjbthewqgbhxeijhzwkvvqysdxhqzfyvrzqydmomqxjwhsfhrqcogcglapczwaunbkmhyctocemjzsqskvgsxmdxdhwzhqplcbsbfnrhrersyjkieqaeedbhlajusyhvbbwgopqitjarslbzdbdihgrugaqzayubzskqjcydlawflaerdjzkqsgwtzvtzrxaljqvlqawrybcyivcrwohpxgkwbdvvcvglobweduvcyaagvezsvjhsprqswlnbiwmwzlddfyfdahlwonqjwzdlstfogtrorgnqrqvyqacrkppacflyeolwhrmnmgddmsvdirbbtfufvjhzosauglspegesmkxyctbnmfofkinhrujhnjdvuvnbbrtozodwlwuxknpezmxxeksvyymlqyheptepjilxeiurxlvzasweerbcpnphnzmdssueahbhpvynivmiqioubqzqfqavpmaieumhbpqrkqgulsdbcryejzwrpwofioppkbylsoecekwrebvhvtleshxheloobdflgdxyrdcvobnsckbxdoexybgcnvsoaychbbfveksulhpnrqlwfptdsahfxbwxbyefbmafwsahcpwthjqmajrtlaykcwidwoixcifadfjfwgafrquscllpmlaoiktgacgdmlfpsrwozxvqppirbthphjfrtyxtadypogegxdwwasmpjxjmsqbzbgquhopjtqykwfqtippkjdbsakfvciudplzybphwfggblzwvqnfzqitttaoxjkbaxcyarfxynfzygxvwkaxdjtyetobeyeewheyamxzzdaajyvikyfnjalnubqaaxfyglwgxuhxzizkiussuaidavswxjxziezopvwnrgmsqndyjvsexahyyauxltwvxvlnshcmpqefdjdmhyqeaaeyczvnstksovfhehvuzzzclfqsdjwdjbelczawtmojhtslcnfdpffakysphqssrwfvyhsttgcacvngkvkzarbmpvbymvsfuxbsgvlzdpbfmroxmyyopachvfhjaapuzsognzhqrlwdekaqkzebbiiwnsgnsxktpybcajsrwquacxsmwyqzgaxtsfimcsgrthvtsqmqiislfkzdipcqqajkfuximdbhmxcfpoxxzqieckilbkdtmpesjbcxgdfucjbrazpzpzdrlnepyiikzoeirghxkmsoytgyuxxjycdmqhbqrjasyhapnkpzyjowewuzttitwnfmxgcqqejqllhbvwaufoqkkljfgtbchgqensufzdxmrenmdogiexurkfyqzzviglovgicfobrffhtivatbxnsjvrbwqweyisvocxvsyozgvtostjuszmdufeqybwwlqubsrwnskoyghoycyuwzjzvoelohjnszhttyrgsbvqjefkjfefgnhbenmsuvfowojppayhdvypbfzkmfsstztzmhtiebwapfrefpmkkmzmtyyfgqzzrsadztlfuhfmoyqtoegaqfolgnqmfpnxjnckiopdxwpmvhhlmplevcqbrinwyavjpyuxolankrbfzlsnafrvhjyyslxsnubcuxailcyvwzcvmuknzdkhnjhfwgxmbaovyqgjtggpfimucwhbztkoeutbasndtdztwhepnkguuuowsxztrmivgdyiwnmrtnmpwsgjemfyiwwatvvmjdkphiafymyrbkgxemiianikjekfbfrllbaumczkozdpllopzwzzkhlvnvaocuzpxcjjekvvjymujblixkjjtuhgrjvwdwlbyvmfhiargmnspbaplmahihpatkywjjzjgmoqwqhcfwuuxxlllmstvhvoutnffmonafdwvmbalxxiwivhupdqzygvutabgoqitufriirtfqeczzjvronqnuljnlmvbcgxylohthcaygcziouzckprgccvporqrzprmdafldhllkktygucqluynwucnntemkxyoyfbbmomwyiwgczzovxdrrgeebkqliobitcjgqxeqhbxkcyaxvdqplxtmhmarcbzwekewkknrnmdpmfohlfyweujlgjfikggqtmpfxewkqccehsluxmrbgcpmnwwzcdsxrhcolbbdddhmvuhvgaymcpyrlxqqainrpsictjfyomklhtgnvhcxwaqkxhazrpthjdlcmraadnnmiuaebedzeujedlfudadmdprpgrrlgfypbaveeyfkurqxcwshyxwcmntugngnugevgzbkzgwuxnrcllljjhlxufudsasmgwjoxkywsuqqjkuuxfeinpgjucmocgckclybxyyqsqieccychckwssiouwfydhihvgjuejmzbudeybgigseylmohjtgodovyxgubphcrbfxcjfkpxqpkfdsqzaecobcliwpxdrqhznjksvzslqeqtyisymwnoaawxrvcjmjkzuuuptodjsvetezrsxgiyjevacxjojtnfpjxizatuxandzewynewwlrwnribcdqhtcgdbgzvgbijapfaemxazqymjiplohvhjdmlmnisotbqijrmxoowgokqxzdlgauseifqynkmgldqwwetmsrsjbkgcotjqpduzimxxwkekpuinbeztvtczekbufmkwphwzvvxshbewxolysmuqgypmlqgsfspuznuxitpqwvotjcueoquuolibbquijlfkybhiuyaqvrlftflhvfemqmntdjcouhauiideifuewflrnwzkdfwttmoyvsmqbpklxpphvjntrynewmoztnsmzjnwbbmdqzopogxlpkhglumhibhdobrpmelogatwzjmppldhvmpigcqqdzttakknrxdxxytyjhozstiqfxynzqfepyzskjhbjmygkuftdvuwqcovcmkbdpguphmztvdchditxppbmjzconxqbjteybbnjppclseuvoovedwsoxvekuwleqscrtsckhevbkswzgrflpxzmsgwncktscxmxpohytfzfxyefplqhlrtdxssacnuglgfcvmbqtcvsaaxsnnzyhueeoygsmbyzhdbcseslhqgjsdbftceazkgningwqevxkxccbwpkmvuebxmuaswzccomrujhbehlblpfhgpwejafhmbjexkibyvvteeuinhmyyrggiekserbtskzruivsfsnjwjtkqfkqysxhwjbdbcwvoxpkhmcmesxcbrouyzkzrjiqtjtwnptboilwwpkahiflbtfbupaobieutxsiollcuyaqoltxvaiwtnzqfaegkicghuovfazbyauonpmipwgkmfathgbsqdyxzmugmuknugbhxprmmxyacbtkhueazexaquifouuiavrxnilbhkbllwxusburfutyodfcyzmyufyhpjiwtlhghhbzkxsqrnqhrvlpuzpqenavxkrqwbzdkafuzxmtncaezmttnimuwmpvyhnukmauohooedhtfhxfvsaldmfbauwzdjvpwvlkccyjfhckrcpouszzeeahbwgeibwezhqdjrmoyrzrvqgpkfrpmrypoetwhpcgzumilaxmtydoqjgbrxsfoquewpcdfgmgbaomanyulcienohelzjcrdgntlsarggsgwfhkfbxjlbxakdnjnrcsypnjkpaqxvxuagghjfruhqwttkdibfdbxqmhipzfkybmejtppmkycgryswgwejzbcmkkblrnktzqeugtjsrlajlvhsrldqmfeyrhkjwuevmisscbmvongaioubzxtofyowhyfeujbhuvbwwotndapnqjorihfnhumrurvpdyyxuzvspofuqwhihvaqfffmbrfwlanoblnvmipeyxyrtgzbdztihyxiscgdfvtgggdvquzorxflffojghrnhqybvggaczikhnfxheozetmjaashjmuseuwzbczdejnlwvlebzffurrvtleexawevsdyxfbbqqonnztpayuvrnskzyoyymcvhitenwffnvscvnrvlosebmqakgzltdgclcgayngniyqfojdzxvgbkwdudchygqatsiusvagfaylohoqhjwivulqxqzvypxrhfnaaniiqgtenhwwsueopsgokfmivjbeppgreozwuudkbziuwnklhqzrxnbsxezovfhcujyqdbchdldzankhflaczdxyhwodbxhxgfomhqvkbyldnvkuimwjpvjzrxevvlsdqirzzmlcmwgztstcfsnwnxvhuzcrkwxdfocgdqkpmsrilkmsezosykzvjdmublzgabofrzugrlqeycwcdlwcvvxgalcczbkbfzgyaagrowwoauqefnickhjnunptpbuuaaucdbutxshymxeummwxvhmpvbjmefihgcjlddedxlbkkhgxtcwqmifjlqvrwfyehirnnvqlitxuadtvhpntzscmlzejecnokgdadvlloihqnbnusaosusgfsmoyrdodjrdmmozcyhulijgajwueodlipchgfxkrpnfdeficocowmwyxuvdiyptptcyyzipoxxubcceqguossosmlvwlmpbfrzgrjxhgubkyfqomkegcvyqgwmukcvqtwymhvwpqxzodpfrblxfiyvruklemiwhguwnqscipeyuvdnxrlezlcsfmdlylihtedgwvlenrdjmizlbmqdxuvegzpemznggrocobjdsmphwouaakdxeybmzssmuguazkcnoltizipywkywwdvdbypdqirkqnkpxpelcxwchlcdxabwfwzgwqlnaczqpmfpbmcdjyhrmjwllyhqwiztbkibphsevztwlwcxwlqivmuimdzjmaenmoqbvigrkbpxztuyfkgaxckjgjuulajyozzmkhfwlutkqoivarxxthjbtfveggcwgeislnowkhjaxtxykuxgdihwofdwnhsvldnzsdxclgekabimvgsbqcxejacwkxsvchuuluxyabicfrpazjbpnbwwdavnxplbwhwjbthewqgbhxeijhzwkvvqysdxhqzfyvrzqydmomqxjwhsfhrqcogcglapczwaunbkmhyctocemjzsqskvgsxmdxdhwzhqplcbsbfnrhrersyjkieqaeedbhlajusyhvbbwgopqitjarslbzdbdihgrugaqzayubzskqjcydlawflaerdjzkqsgwtzvtzrxaljqvlqawrybcyivcrwohpxgkwbdvvcvglobweduvcyaagvezsvjhsprqswlnbiwmwzlddfyfdahlwonqjwzdlstfogtrorgnqrqvyqacrkppacflyeolwhrmnmgddmsvdirbbtfufvjhzosauglspegesmkxyctbnmfofkinhrujhnjdvuvnbbrto"));
    }

    @Test
    void repeatedSubstringPatternWhenFalse() {
        Solution solution = new Solution();
        assertFalse(solution.repeatedSubstringPattern("aba"));
        assertFalse(solution.repeatedSubstringPattern("abac"));
        assertFalse(solution.repeatedSubstringPattern("aabaaba"));
    }
}